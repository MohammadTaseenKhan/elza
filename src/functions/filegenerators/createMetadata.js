const { remote } = window.require('electron')
const { BrowserWindow } = remote

module.exports = function (metadataObj) {
  return new Promise((resolve, reject) => {
    var htmlString = ''
    for (var key in metadataObj) {
      htmlString +=
        '<tr><td><h3>' +
        key +
        ' :' +
        '</h3></td><td><h3>' +
        metadataObj[key] +
        '</td></h3></tr>'
    }

    var template = `<style>

  html {
    text-align: center;
    font-family: sans-serif;
    align-items: center;
    align-content: center;
    align-self: center;

  }

h1 {
color: %232ecc71;
margin-bottom: 0px;
padding-bottom: 0px;
font-size: 30px;
}

h2 {
 color: %23242424;
 font-size: 18px;
 font-weight:600;
}

h3 {
 text-align: left;
 color: grey;
 font-size: 16px;
}
h4 {
  color: grey;
  font-size: 14px;
}
td {
    padding:5px;
    min-height:12px;
    min-width:200px;
    max-width:800px;
    display:table-cell;
  }
</style>
<center>
<h1> Metadata </h1>
<h2 style='text-align: center;'>Generated by ExpertEvidence.Org </h2>
<br>
<table>`

    template = template + htmlString
    /*var options = {
      format: 'A4',
      border: {
        top: '0.5in',
        right: '0.5in',
        bottom: '0.5in',
        left: '0.5in'
      }
    } */

    let win = new BrowserWindow({ show: false })
    win.loadURL('data:text/html;charset=utf-8,' + template)
    win.webContents.on('did-finish-load', () => {
      win.webContents
        .printToPDF({})
        .then(data => {
          resolve(data)
        })
        .catch(error => {
          console.log(error)
        })
    })
  })
}
